{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthGuard } from './auth/auth.guard';\nimport { AppComponent } from './app.component';\nimport { generalMachiningComponent } from './generalMachining/generalMachining.component';\nimport { DailyInfoComponent } from './generalMachining/daily-info/daily-info.component';\nimport { setupSheetsComponent } from './setupSheets/setupSheets.component';\nimport { toolReOrderComponent } from './toolReOrder/toolReOrder.component';\nimport { RouterModule } from '@angular/router';\nimport { UserprofileComponent } from './userprofile/userprofile.component';\nimport { SawComponent } from './saw/saw.component';\nimport { DeburringComponent } from './deburring/deburring.component';\nimport { Cat50leadwellsComponent } from './cat50leadwells/cat50leadwells.component';\nimport { Cat40leadwellComponent } from './cat40leadwell/cat40leadwell.component';\nimport { CinciMillComponent } from './cinci-mill/cinci-mill.component';\nimport { DoosanComponent } from './doosan/doosan.component';\nimport { LeadwellLatheComponent } from './leadwell-lathe/leadwell-lathe.component';\nimport { MoriLatheComponent } from './mori-lathe/mori-lathe.component';\nimport { CylinderKingComponent } from './cylinder-king/cylinder-king.component';\nimport { RodHoneComponent } from './rod-hone/rod-hone.component';\nimport { PartsWashingComponent } from './parts-washing/parts-washing.component';\nimport { LoginMainComponent } from './login-main/login-main.component';\nimport { AssemblyComponent } from './assembly/assembly.component';\nimport { EngineeringComponent } from './engineering/engineering.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ENGCompressorFundamentalsComponent } from './eng-compressor-fundamentals/eng-compressor-fundamentals.component';\nimport { ENGCompressorFundamentalsIndexAdvancedRecipCompressorInfoComponent } from './eng-compressor-fundamentals-index-advanced-recip-compressor-info/eng-compressor-fundamentals-index-advanced-recip-compressor-info.component';\nimport { ForgotauthComponent } from './forgotauth/forgotauth.component';\nimport { ViewUsersComponent } from './view-users/view-users.component';\nimport { GdAndTComponent } from './gd-and-t/gd-and-t.component';\nimport { MeasuringToolsComponent } from './measuring-tools/measuring-tools.component';\nimport { GeneralMachiningInfoComponent } from './general-machining-info/general-machining-info.component';\nimport { DailyMaintanceComponent } from './daily-maintance/daily-maintance.component';\nimport { NgxExtendedPdfViewerModule } from 'ngx-extended-pdf-viewer';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst appRoutes = [{\n  path: '',\n  component: LoginMainComponent\n}, {\n  path: 'header',\n  component: HeaderComponent\n}, // {path: 'signup', component:SignupComponent},\n{\n  path: 'forgotauth',\n  component: ForgotauthComponent\n}, {\n  path: 'userprofile',\n  component: UserprofileComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'setupsheets',\n  component: setupSheetsComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'toolreorder',\n  component: toolReOrderComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'generalmachining',\n  component: generalMachiningComponent,\n  canActivate: [AuthGuard],\n  children: [{\n    path: 'daily-info',\n    component: DailyInfoComponent,\n    canActivate: [AuthGuard]\n  }]\n}, //{path: 'generalmachining/daily-info', component: DailyInfoComponent, canActivate: [AuthGuard]},\n{\n  path: 'generalmachining/daily-maintance',\n  component: DailyMaintanceComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'generalmachining/general-machining-info',\n  component: GeneralMachiningInfoComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'generalmachining/saw',\n  component: SawComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'generalmachining/deburring',\n  component: DeburringComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'generalmachining/partswashing',\n  component: PartsWashingComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'generalmachining/cat50leadwells',\n  component: Cat50leadwellsComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'generalmachining/cat40leadwell',\n  component: Cat40leadwellComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'generalmachining/cinci',\n  component: CinciMillComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'generalmachining/doosan',\n  component: DoosanComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'generalmachining/leadwell-lathe',\n  component: LeadwellLatheComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'generalmachining/moriseiki',\n  component: MoriLatheComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'generalmachining/cylinderking',\n  component: CylinderKingComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'generalmachining/rodhone',\n  component: RodHoneComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'generalmachining/gd-and-t',\n  component: GdAndTComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'generalmachining/measuring-tools',\n  component: MeasuringToolsComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'assembly',\n  component: AssemblyComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'engineering',\n  component: EngineeringComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'engineering/compressor-fundamentals-index',\n  component: ENGCompressorFundamentalsComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'engineering/compressor-fundamentals-index/Advanced_Recip_Compressor_Info',\n  component: ENGCompressorFundamentalsIndexAdvancedRecipCompressorInfoComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'view-users',\n  component: ViewUsersComponent,\n  canActivate: [AuthGuard]\n}];\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[BrowserModule, RouterModule.forRoot(appRoutes), FormsModule, ReactiveFormsModule, HttpClientModule, NgxExtendedPdfViewerModule], RouterModule]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}