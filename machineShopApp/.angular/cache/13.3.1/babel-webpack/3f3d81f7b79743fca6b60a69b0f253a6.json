{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { pdfDefaultOptions } from 'ngx-extended-pdf-viewer';\nlet ExamplePdfViewerComponent = class ExamplePdfViewerComponent {\n  /** In most cases, you don't need the NgxExtendedPdfViewerService. It allows you\r\n   *  to use the \"find\" api, to extract text and images from a PDF file,\r\n   *  to print programmatically, and to show or hide layers by a method call.\r\n  */\n  constructor(pdfService) {\n    this.pdfService = pdfService;\n    /* More likely than not you don't need to tweak the pdfDefaultOptions.\r\n       They are a collecton of less frequently used options.\r\n       To illustrate how they're used, here are two example settings: */\n\n    pdfDefaultOptions.doubleTapZoomFactor = '150%'; // The default value is '200%'\n\n    pdfDefaultOptions.maxCanvasPixels = 4096 * 4096 * 5; // The default value is 4096 * 4096 pixels,\n    // but most devices support much higher resolutions.\n    // Increasing this setting allows your users to use higher zoom factors,\n    // trading image quality for performance.\n  }\n\n};\nExamplePdfViewerComponent = __decorate([Component({\n  selector: 'app-example-pdf-viewer',\n  templateUrl: './example-pdf-viewer.component.html',\n  styleUrls: ['./example-pdf-viewer.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})], ExamplePdfViewerComponent);\nexport { ExamplePdfViewerComponent };","map":null,"metadata":{},"sourceType":"module"}