{"ast":null,"code":"import { __decorate } from \"tslib\"; //Main Imports\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthGuard } from './auth/auth.guard';\nimport { AppComponent } from './app.component';\nimport { RouterModule } from '@angular/router';\nimport { ExamplePdfViewerComponent } from './example-pdf-viewer/example-pdf-viewer.component';\nimport { NgxExtendedPdfViewerModule } from 'ngx-extended-pdf-viewer';\nimport { environment } from '../environments/environment'; //Firebase Components\n\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\nimport { provideDatabase, getDatabase } from '@angular/fire/database';\nimport { provideStorage, getStorage } from '@angular/fire/storage'; //General Machining Components\n\nimport { generalMachiningComponent } from './generalMachining/generalMachining.component';\nimport { DailyInfoComponent } from './generalMachining/daily-info/daily-info.component';\nimport { GeneralMachiningInfoComponent } from './generalMachining/general-machining-info/general-machining-info.component';\nimport { Cat50leadwellsComponent } from './generalMachining/cat50leadwells/cat50leadwells.component';\nimport { Cat40leadwellComponent } from './generalMachining/cat40leadwell/cat40leadwell.component';\nimport { CinciMillComponent } from './generalMachining/cinci-mill/cinci-mill.component';\nimport { DoosanComponent } from './generalMachining/doosan/doosan.component';\nimport { LeadwellLatheComponent } from './generalMachining/leadwell-lathe/leadwell-lathe.component';\nimport { MoriLatheComponent } from './generalMachining/mori-lathe/mori-lathe.component';\nimport { CylinderKingComponent } from './generalMachining/cylinder-king/cylinder-king.component';\nimport { RodHoneComponent } from './generalMachining/rod-hone/rod-hone.component';\nimport { DeburringComponent } from './generalMachining/deburring/deburring.component';\nimport { PartsWashingComponent } from './generalMachining/parts-washing/parts-washing.component';\nimport { SawComponent } from './generalMachining/saw/saw.component';\nimport { GdAndTComponent } from './generalMachining/gd-and-t/gd-and-t.component';\nimport { MeasuringToolsComponent } from './generalMachining/measuring-tools/measuring-tools.component';\nimport { DailyMaintanceComponent } from './generalMachining/daily-maintance/daily-maintance.component'; //General Page Components\n\nimport { setupSheetsComponent } from './setupSheets/setupSheets.component';\nimport { toolReOrderComponent } from './toolReOrder/toolReOrder.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { ButtonBarGenMachComponent } from './button-bar-gen-mach/button-bar-gen-mach.component';\nimport { MainTemplateComponent } from './main-template/main-template.component';\nimport { HeaderComponent } from './header/header.component';\nimport { LoadingSpinnerComponent } from './shared/loading-spinner/loading-spinner.component';\nimport { ScrollTopbtnComponent } from './scroll-topbtn/scroll-topbtn.component';\nimport { BackBtnComponent } from './back-btn/back-btn.component'; //Auth Related Componenets\n\nimport { UserprofileComponent } from './userprofile/userprofile.component';\nimport { LoginHeaderComponent } from './login-header/login-header.component';\nimport { LoginMainComponent } from './login-main/login-main.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgotauthComponent } from './forgotauth/forgotauth.component';\nimport { ViewUsersComponent } from './view-users/view-users.component'; //Assembly Related Components\n\nimport { AssemblyComponent } from './assembly/assembly.component'; //Engineering Related Components\n\nimport { EngineeringComponent } from './engineering/engineering.component';\nimport { ENGCompressorFundamentalsComponent } from './eng-compressor-fundamentals/eng-compressor-fundamentals.component';\nimport { ENGCompressorFundamentalsIndexAdvancedRecipCompressorInfoComponent } from './eng-compressor-fundamentals-index-advanced-recip-compressor-info/eng-compressor-fundamentals-index-advanced-recip-compressor-info.component';\nconst appRoutes = [{\n  path: '',\n  component: LoginMainComponent\n}, {\n  path: 'header',\n  component: HeaderComponent\n}, // {path: 'signup', component:SignupComponent},\n{\n  path: 'forgotauth',\n  component: ForgotauthComponent\n}, {\n  path: 'userprofile',\n  component: UserprofileComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'setupsheets',\n  component: setupSheetsComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'toolreorder',\n  component: toolReOrderComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'generalmachining',\n  component: generalMachiningComponent,\n  canActivate: [AuthGuard],\n  children: [{\n    path: 'daily-info',\n    component: DailyInfoComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: 'general-machining-info',\n    component: GeneralMachiningInfoComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: 'daily-maintance',\n    component: DailyMaintanceComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: 'saw',\n    component: SawComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: 'deburring',\n    component: DeburringComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: 'partswashing',\n    component: PartsWashingComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: 'cat50leadwells',\n    component: Cat50leadwellsComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: 'cat40leadwell',\n    component: Cat40leadwellComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: 'cinci',\n    component: CinciMillComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: 'doosan',\n    component: DoosanComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: 'leadwell-lathe',\n    component: LeadwellLatheComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: 'moriseiki',\n    component: MoriLatheComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: 'cylinderking',\n    component: CylinderKingComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: 'rodhone',\n    component: RodHoneComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: 'gd-and-t',\n    component: GdAndTComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: 'measuring-tools',\n    component: MeasuringToolsComponent,\n    canActivate: [AuthGuard]\n  }]\n}, {\n  path: 'assembly',\n  component: AssemblyComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'engineering',\n  component: EngineeringComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'engineering/compressor-fundamentals-index',\n  component: ENGCompressorFundamentalsComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'engineering/compressor-fundamentals-index/Advanced_Recip_Compressor_Info',\n  component: ENGCompressorFundamentalsIndexAdvancedRecipCompressorInfoComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'view-users',\n  component: ViewUsersComponent,\n  canActivate: [AuthGuard]\n}];\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent, generalMachiningComponent, setupSheetsComponent, toolReOrderComponent, UserprofileComponent, NavbarComponent, SawComponent, ButtonBarGenMachComponent, DeburringComponent, Cat50leadwellsComponent, Cat40leadwellComponent, CinciMillComponent, DoosanComponent, LeadwellLatheComponent, MoriLatheComponent, CylinderKingComponent, RodHoneComponent, PartsWashingComponent, LoginHeaderComponent, MainTemplateComponent, LoginMainComponent, AssemblyComponent, EngineeringComponent, HeaderComponent, ENGCompressorFundamentalsComponent, ENGCompressorFundamentalsIndexAdvancedRecipCompressorInfoComponent, SignupComponent, ForgotauthComponent, LoadingSpinnerComponent, ViewUsersComponent, GdAndTComponent, MeasuringToolsComponent, ScrollTopbtnComponent, GeneralMachiningInfoComponent, DailyInfoComponent, DailyMaintanceComponent, BackBtnComponent, ExamplePdfViewerComponent],\n  imports: [BrowserModule, RouterModule.forRoot(appRoutes), FormsModule, ReactiveFormsModule, HttpClientModule, NgxExtendedPdfViewerModule, provideFirebaseApp(() => initializeApp(environment.firebase)), provideDatabase(() => getDatabase()), provideStorage(() => getStorage())],\n  exports: [RouterModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":null,"metadata":{},"sourceType":"module"}